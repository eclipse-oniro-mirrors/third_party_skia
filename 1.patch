diff --git a/modules/svg/include/SkSVGContainer.h b/modules/svg/include/SkSVGContainer.h
index 560271854f..6ea53e32a7 100644
--- a/modules/svg/include/SkSVGContainer.h
+++ b/modules/svg/include/SkSVGContainer.h
@@ -14,6 +14,7 @@
 class SkSVGContainer : public SkSVGTransformableNode {
 public:
     void appendChild(sk_sp<SkSVGNode>) override;
+    std::vector<sk_sp<SkSVGNode>> getChild() override;

 protected:
     explicit SkSVGContainer(SkSVGTag);
diff --git a/modules/svg/include/SkSVGDOM.h b/modules/svg/include/SkSVGDOM.h
index cf9427e78b..dc6eec253b 100644
--- a/modules/svg/include/SkSVGDOM.h
+++ b/modules/svg/include/SkSVGDOM.h
@@ -67,6 +67,7 @@ public:
      */
     void setContainerSize(const SkSize&);

+    void setResizePercentage(uint32_t resizePercentage);
     /**
      * DEPRECATED: use getRoot()->intrinsicSize() to query the root element intrinsic size.
      *
@@ -94,7 +95,7 @@ private:
     const sk_sp<SkFontMgr>                     fFontMgr;
     const sk_sp<skresources::ResourceProvider> fResourceProvider;
     const SkSVGIDMapper                        fIDMapper;
-
+    uint32_t                                   fSVGResizePercentage;
     SkSize                 fContainerSize;
 };

diff --git a/modules/svg/include/SkSVGNode.h b/modules/svg/include/SkSVGNode.h
index 9ca1b33b38..2933f24217 100644
--- a/modules/svg/include/SkSVGNode.h
+++ b/modules/svg/include/SkSVGNode.h
@@ -99,6 +99,10 @@ public:
     SkSVGTag tag() const { return fTag; }

     virtual void appendChild(sk_sp<SkSVGNode>) = 0;
+    virtual std::vector<sk_sp<SkSVGNode>> getChild() {
+        std::vector<sk_sp<SkSVGNode>> res;
+        return res;
+    }

     void render(const SkSVGRenderContext&) const;
     bool asPaint(const SkSVGRenderContext&, SkPaint*) const;
diff --git a/modules/svg/include/SkSVGRenderContext.h b/modules/svg/include/SkSVGRenderContext.h
index 4529d41ffe..a62fd8e475 100644
--- a/modules/svg/include/SkSVGRenderContext.h
+++ b/modules/svg/include/SkSVGRenderContext.h
@@ -25,8 +25,8 @@ class SkSVGLength;

 class SkSVGLengthContext {
 public:
-    SkSVGLengthContext(const SkSize& viewport, SkScalar dpi = 90)
-        : fViewport(viewport), fDPI(dpi) {}
+    SkSVGLengthContext(const SkSize& viewport, uint32_t resizePercentage = 100, SkScalar dpi = 90)
+        : fViewport(viewport), fResizePercentage(resizePercentage), fDPI(dpi) {}

     enum class LengthType {
         kHorizontal,
@@ -43,6 +43,7 @@ public:

 private:
     SkSize   fViewport;
+    uint32_t  fResizePercentage;
     SkScalar fDPI;
 };

diff --git a/modules/svg/include/SkSVGText.h b/modules/svg/include/SkSVGText.h
index f1fa4e7eeb..7ec8e0fb5f 100644
--- a/modules/svg/include/SkSVGText.h
+++ b/modules/svg/include/SkSVGText.h
@@ -46,6 +46,7 @@ public:
     SVG_ATTR(XmlSpace, SkSVGXmlSpace, SkSVGXmlSpace::kDefault)

     void appendChild(sk_sp<SkSVGNode>) final;
+    std::vector<sk_sp<SkSVGNode>> getChild() final;

 protected:
     explicit SkSVGTextContainer(SkSVGTag t) : INHERITED(t) {}
diff --git a/modules/svg/src/SkSVGContainer.cpp b/modules/svg/src/SkSVGContainer.cpp
index 6eb7d88592..d341ae89ac 100644
--- a/modules/svg/src/SkSVGContainer.cpp
+++ b/modules/svg/src/SkSVGContainer.cpp
@@ -17,6 +17,14 @@ void SkSVGContainer::appendChild(sk_sp<SkSVGNode> node) {
     fChildren.push_back(std::move(node));
 }

+std::vector<sk_sp<SkSVGNode>> SkSVGContainer::getChild() {
+    std::vector<sk_sp<SkSVGNode>> res;
+    for (int i = 0; i < fChildren.count(); ++i) {
+        res.emplace_back(fChildren[i]);
+    }
+    return res;
+}
+
 bool SkSVGContainer::hasChildren() const {
     return !fChildren.empty();
 }
diff --git a/modules/svg/src/SkSVGDOM.cpp b/modules/svg/src/SkSVGDOM.cpp
index 779acf808e..26a4df64d8 100644
--- a/modules/svg/src/SkSVGDOM.cpp
+++ b/modules/svg/src/SkSVGDOM.cpp
@@ -456,6 +456,7 @@ SkSVGDOM::SkSVGDOM(sk_sp<SkSVGSVG> root, sk_sp<SkFontMgr> fmgr,
     , fFontMgr(std::move(fmgr))
     , fResourceProvider(std::move(rp))
     , fIDMapper(std::move(mapper))
+    , fSVGResizePercentage(100)
     , fContainerSize(fRoot->intrinsicSize(SkSVGLengthContext(SkSize::Make(0, 0))))
 {
     SkASSERT(fResourceProvider);
@@ -464,13 +465,20 @@ SkSVGDOM::SkSVGDOM(sk_sp<SkSVGSVG> root, sk_sp<SkFontMgr> fmgr,
 void SkSVGDOM::render(SkCanvas* canvas) const {
     TRACE_EVENT0("skia", TRACE_FUNC);
     if (fRoot) {
-        SkSVGLengthContext       lctx(fContainerSize);
+        SkSVGLengthContext       lctx(fContainerSize, fSVGResizePercentage);
         SkSVGPresentationContext pctx;
         fRoot->render(SkSVGRenderContext(canvas, fFontMgr, fResourceProvider, fIDMapper, lctx, pctx,
                                          {nullptr, nullptr}));
     }
 }

+void SkSVGDOM::setResizePercentage(uint32_t resizePercentage)
+{
+    fSVGResizePercentage = resizePercentage;
+    fContainerSize.fWidth *= resizePercentage / 100;
+    fContainerSize.fHeight *= resizePercentage / 100;
+}
+
 const SkSize& SkSVGDOM::containerSize() const {
     return fContainerSize;
 }
diff --git a/modules/svg/src/SkSVGRenderContext.cpp b/modules/svg/src/SkSVGRenderContext.cpp
index cd09fea0e2..b880875b32 100644
--- a/modules/svg/src/SkSVGRenderContext.cpp
+++ b/modules/svg/src/SkSVGRenderContext.cpp
@@ -53,19 +53,19 @@ SkScalar SkSVGLengthContext::resolve(const SkSVGLength& l, LengthType t) const {
     case SkSVGLength::Unit::kNumber:
         // Fall through.
     case SkSVGLength::Unit::kPX:
-        return l.value();
+        return l.value() * fResizePercentage / 100;
     case SkSVGLength::Unit::kPercentage:
-        return l.value() * length_size_for_type(fViewport, t) / 100;
+        return l.value() * length_size_for_type(fViewport, t) / 100 * fResizePercentage / 100;
     case SkSVGLength::Unit::kCM:
-        return l.value() * fDPI * kCMMultiplier;
+        return l.value() * fDPI * kCMMultiplier * fResizePercentage / 100;
     case SkSVGLength::Unit::kMM:
-        return l.value() * fDPI * kMMMultiplier;
+        return l.value() * fDPI * kMMMultiplier * fResizePercentage / 100;
     case SkSVGLength::Unit::kIN:
-        return l.value() * fDPI * kINMultiplier;
+        return l.value() * fDPI * kINMultiplier * fResizePercentage / 100;
     case SkSVGLength::Unit::kPT:
-        return l.value() * fDPI * kPTMultiplier;
+        return l.value() * fDPI * kPTMultiplier * fResizePercentage / 100;
     case SkSVGLength::Unit::kPC:
-        return l.value() * fDPI * kPCMultiplier;
+        return l.value() * fDPI * kPCMultiplier * fResizePercentage / 100;
     default:
         SkDebugf("unsupported unit type: <%d>\n", (int)l.unit());
         return 0;
diff --git a/modules/svg/src/SkSVGText.cpp b/modules/svg/src/SkSVGText.cpp
index b385734f5f..4e3785fa69 100644
--- a/modules/svg/src/SkSVGText.cpp
+++ b/modules/svg/src/SkSVGText.cpp
@@ -501,6 +501,13 @@ void SkSVGTextContainer::appendChild(sk_sp<SkSVGNode> child) {
     }
 }

+
+std::vector<sk_sp<SkSVGNode>> SkSVGTextContainer::getChild() {
+    std::vector<sk_sp<SkSVGNode>> res;
+    res.assign(fChildren.begin(),fChildren.end());
+    return res;
+}
+
 void SkSVGTextContainer::onShapeText(const SkSVGRenderContext& ctx, SkSVGTextContext* tctx,
                                      SkSVGXmlSpace) const {
     SkASSERT(tctx);
