# Copyright 2018 Google Inc.
#
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../../gn/skia.gni")
import("skshaper.gni")

if (skia_enable_skshaper) {
  config("public_config") {
    include_dirs = [ "include" ]
    defines = [ "SK_SHAPER_PRIMITIVE_AVAILABLE" ]
    if (is_component_build) {
      defines += [ "SKSHAPER_DLL" ]
    }
    if (skia_use_fonthost_mac) {
      defines += [ "SK_SHAPER_CORETEXT_AVAILABLE" ]
    }
    if (skia_use_harfbuzz) {
      defines += [ "SK_SHAPER_HARFBUZZ_AVAILABLE" ]
    }
    if (skia_enable_skunicode) {
      defines += [ "SK_SHAPER_UNICODE_AVAILABLE" ]
    }
  }

  component("skshaper") {
    check_includes = false
    public_configs = [ ":public_config" ]
    public = skia_shaper_public
    if (!use_oh_skia) {
      deps = [ "../..:skia" ]
    } else {
      include_dirs = [ "${skia_root_dir}" ]
      deps = []
    }
    defines = [ "SKSHAPER_IMPLEMENTATION=1" ]
    sources = skia_shaper_primitive_sources
    if (skia_use_fonthost_mac) {
      sources += skia_shaper_coretext_sources
      if (is_mac) {
        frameworks = [ "ApplicationServices.framework" ]
      }

      if (is_ios) {
        frameworks = [
          "CoreFoundation.framework",
          "CoreText.framework",
        ]
      }
    }
    if (skia_enable_skunicode) {
      sources += skia_shaper_skunicode_sources
      if (!use_oh_skia) {
        deps += [ "../skunicode" ]
      } else {
        defines += [
          "SK_UNICODE_AVAILABLE",
          "SK_UNICODE_ICU_IMPLEMENTATION",
        ]
      }
    }
    if (skia_use_harfbuzz && skia_enable_skunicode) {
      sources += skia_shaper_harfbuzz_sources
      if (!use_oh_skia) {
        deps += [
          "../skunicode",
          "${skia_third_party_dir}/harfbuzz",
        ]
      } else {
        if (skia_use_system_lib) {
          external_deps = [ "harfbuzz:harfbuzz_static_for_skia" ]
        } else {
          deps += [ "${skia_third_party_dir}/harfbuzz" ]
        }
      }
    }
    configs += [ "../../:skia_private" ]
  }

  if (defined(is_skia_standalone) && skia_enable_tools) {
    skia_source_set("tests") {
      if (skia_enable_skshaper_tests) {
        testonly = true
        sources = skia_shaper_tests
        deps = [
          ":skshaper",
          "../..:skia",
          "../..:test",
          "../skunicode",
        ]
      } else {
        sources = []
      }
      if (is_ohos) {
        external_deps = [ "hitrace:hitrace_meter" ]
        if (!build_ohos_sdk && !is_arkui_x) {
          external_deps += [ "init:libbegetutil" ]
          if (defined(defines)) {
            defines += [ "NOT_BUILD_FOR_OHOS_SDK" ]
          } else {
            defines = [ "NOT_BUILD_FOR_OHOS_SDK" ]
          }
        }
      }
      if (is_arkui_x) {
        deps += [ "//third_party/bounds_checking_function:libsec_static" ]
      } else if (is_ohos) {
        if (is_component_build) {
          external_deps += [ "bounds_checking_function:libsec_shared" ]
        } else {
          external_deps += [ "bounds_checking_function:libsec_static" ]
        }
      }
    }
  }
} else {
  group("skshaper") {
  }
  group("tests") {
  }
}
