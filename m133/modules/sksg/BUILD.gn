# Copyright 2018 Google Inc.
#
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../../gn/skia.gni")

config("public_config") {
  include_dirs = [ "include" ]
}

skia_component("sksg") {
  check_includes = false
  import("sksg.gni")
  public_configs = [ ":public_config" ]
  sources = skia_sksg_sources
  configs = [ "../../:skia_private" ]
  deps = [ "../..:skia" ]
}

if (defined(is_skia_standalone) && skia_enable_tools) {
  skia_source_set("tests") {
    testonly = true

    configs = [ "../..:skia_private" ]
    sources = [ "tests/SGTest.cpp" ]
    deps = [
      ":sksg",
      "../..:skia",
      "../..:test",
    ]
    if (is_ohos) {
      external_deps = [ "hitrace:hitrace_meter" ]
      if (!build_ohos_sdk && !is_arkui_x) {
        external_deps += [ "init:libbegetutil" ]
        if (defined(defines)) {
          defines += [ "NOT_BUILD_FOR_OHOS_SDK" ]
        } else {
          defines = [ "NOT_BUILD_FOR_OHOS_SDK" ]
        }
      }
    }

    if (is_arkui_x) {
        deps += [ "//third_party/bounds_checking_function:libsec_static" ]
    } else if (is_ohos) {
      if (is_component_build) {
        external_deps += [ "bounds_checking_function:libsec_shared" ]
      } else {
        external_deps += [ "bounds_checking_function:libsec_static" ]
      }
    }
  }

  skia_source_set("slides") {
    if (target_cpu != "wasm") {  # TODO: clean up wasm test
      testonly = true

      configs = [ "../..:skia_private" ]
      sources = [ "slides/SVGPongSlide.cpp" ]
      deps = [
        ":sksg",
        "../..:skia",
      ]
    }
  }
}
